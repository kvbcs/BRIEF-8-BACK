// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid()) @db.VarChar(36)
  firstName       String  @db.VarChar(255)
  lastName        String  @db.VarChar(255)
  email           String  @unique() @db.VarChar(255)
  password        String  @db.VarChar(150)
  roleId          String? @db.VarChar(36)
  agendaId          String? @db.VarChar(36)
  isActive        Boolean  @default(false)
  activationToken String? 
  gdpr            DateTime  @default(now())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  agenda          Agenda? @relation(fields: [agendaId], references: [id])
  role            Role? @relation(fields: [roleId], references: [id])
}

model Role {
  id        String   @id @default(uuid()) @db.VarChar(36)
  name      String   @unique @db.VarChar(5)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users       User []
}

model Event {
  id              String   @id @default(uuid()) @db.VarChar(36)
  title           String   @db.VarChar(255)
  image           String   @db.Text()
  description     String   @db.Text()
  categoryId      String   @db.VarChar(36)
  startDate       DateTime @db.DateTime
  endDate         DateTime @db.DateTime
  quantity        Int      @db.Int @default(0)
  maxParticipants Int      @db.Int
  price           Float    @db.Float
  isAvailable     Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  category       Category @relation(fields: [categoryId], references: [id])
  agendas        Agenda_Has_Event[]
}

model Category {
  id           String   @id @default(uuid()) @db.VarChar(36)
  name         String   @unique @db.VarChar(36)
  image        String   @db.Text()
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  events       Event[]
}

model Agenda {
  id          String    @id @default(uuid()) @db.VarChar(36)
  userId      String    @default(uuid()) @db.VarChar(36)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  users         User[]
  agendaEvents  Agenda_Has_Event[]
}

model Agenda_Has_Event {
  agendaId   String   @db.VarChar(36)
  eventId    String   @db.VarChar(36)
  quantity    Int     @db.Int

  agenda     Agenda  @relation(fields: [agendaId], references: [id])
  event      Event   @relation(fields: [eventId], references: [id])

  @@id([agendaId, eventId])
}